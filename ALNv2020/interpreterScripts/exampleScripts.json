{
    "metadata":{
        "author":"J4ck3LSyN",
        "title":"exampleScripts",
        "description":"Example scripts to assist in your programming."
    },
    "classes":{
        "expressionExamples":{
            "className":"expressionExamples",
            "classVariables":{},
            "constructor":{
                "parameters":[
                    {
                        "name":"self"
                    },
                    {
                        "name":"name",
                        "default":{
                            "type":"literal",
                            "value":"expressionExamples"
                        }
                    }
                ],
                "body":[
                    {
                        "type":"comment",
                        "text":"__init__"
                    }
                ]
            },
            "methods":{
            }
        },
        "statementExamples":{
            "className":"statementExamples",
            "classVariables":{},
            "constructor":{
                "parameters":[
                    {
                        "name":"self"
                    },
                    {
                        "name":"name",
                        "default":{
                            "type":"literal",
                            "value":"statementExamples"
                        }
                    }
                ],
                "body":[
                    {
                        "type":"comment",
                        "text":"__init__"
                    }
                ]
            },
            "methods":{
                "logicExample":{
                    "parameters":[
                        {"name":"self"}
                        
                    ],
                    "body":[
                        {
                            
                        }
                    ]
                }
            }
        },
        "standardLibraryExamples":{
            "className":"standardLibraryExamples",
            "classVariables":{},
            "constructor":{
                "parameters":[
                    {
                        "name":"self"
                    },
                    {
                        "name":"name",
                        "default":{
                            "type":"literal",
                            "value":"standardLibraryExamples"
                        }
                    }
                ],
                "body":[
                    {
                        "type":"comment",
                        "text":"__init__"
                    },
                    {
                        "type":"import",
                        "moduleName":"variables"
                    }
                ]
            },
            "methods":{
                "bytesEncode":{
                    "parameters":[
                        {"name":"self"},
                        {"name":"data"}
                    ],
                    "body":[
                        {
                            "type":"assign",
                            "target":{"name":"bytesEncodedData"},
                            "value":{
                                "type":"call",
                                "functionName":"variables.bytes.encode",
                                "arguments":[
                                    {
                                        "type":"varRef",
                                        "name":"data"
                                    }
                                ]
                            }
                        },
                        {
                            "type":"call",
                            "functionName":"io.print",
                            "arguments":[
                                {
                                    "type":"formatString",
                                    "value":{
                                        "type":"literal",
                                        "value":"Encoded '%(data)' -> '%(bytesEncodedData)'"
                                    }
                                }
                            ]
                        },
                        {
                            "type":"return",
                            "value":{"type":"varRef","name":"bytesEncodedData"}
                        }
                    ]
                },
                "bytesDecode":{
                    "parameters":[
                        {"name":"self"},
                        {"name":"data"}
                    ],
                    "body":[
                        {
                            "type":"if",
                            "condition":{
                                "type":"isInstance",
                                "value":{"type":"varRef","name":"data"},
                                "varType":"bytes"
                            },
                            "then":[
                                {
                                    "type":"assign",
                                    "target":{"name":"bytesDecodeData"},
                                    "value":{
                                        "type":"call",
                                        "functionName":"variables.bytes.decode",
                                        "arguments":[
                                            {
                                                "type":"varRef",
                                                "name":"data"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type":"call",
                                    "functionName":"io.print",
                                    "arguments":[
                                        {
                                            "type":"formatString",
                                            "value":{
                                                "type":"literal",
                                                "value":"Decoded '%(data)' -> '%(bytesDecodeData)'"
                                            }
                                        }
                                    ]
                                }
                            ],
                            "else":[
                                {
                                    "type":"throw",
                                    "error":{
                                        "type":"formatString",
                                        "value":{
                                            "type":"literal",
                                            "value":"Exception data:'%(data)' was not a 'bytes' type..."
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                    
                },
                "sockConnectEX":{
                    "parameters":[
                        {"name":"self"},
                        {"name":"host","default":{"type":"literal","value":"1.1.1.1"}},
                        {"name":"port","default":{"type":"literal","value":8080}}
                    ],
                    "body":[
                        {
                            "type":"import",
                            "moduleName":"sock"
                        },
                        {
                            "type":"call",
                            "functionName":"io.print",
                            "arguments":[
                                {
                                    "type":"formatString",
                                    "value":{
                                        "type":"literal",
                                        "value":"Attempting connection to (%(host):%(port))..."
                                    }
                                }
                            ]
                        },
                        {
                            "type":"assign",
                            "target":{"name":"socketObject"},
                            "value":{
                                "type": "call",
                                "functionName":"sock.getSocketObject",
                                "arguments":[
                                    {
                                        "type":"literal",
                                        "value":"tcp"
                                    }
                                ]
                            }
                        },
                        {

                            "type":"return",
                            "value":{
                                "type":"call",
                                "functionName":"sock.connectEX",
                                "arguments":[
                                    {
                                        "type":"varRef",
                                        "name":"socketObject"
                                    },
                                    {
                                        "type":"varRef",
                                        "name":"host"
                                    },
                                    {
                                        "type":"varRef",
                                        "name":"port"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "shellExec":{
                    "parameters":[
                        {"name":"self"},
                        {"name":"command"}
                    ],
                    "body":[
                        {
                            "type":"import",
                            "moduleName":"proc"
                        },
                        {
                            "type":"assign",
                            "target":{"name":"execOutput"},
                            "value":{
                                "type":"call",
                                "functionName":"proc.shell",
                                "arguments":[
                                    {
                                        "type":"varRef",
                                        "name":"command"
                                    }
                                ]
                            }
                        },
                        {
                            "type":"return",
                            "value":{"type":"varRef","name":"execOutput"}
                        }
                    ]
                }
            }
        },
        "externalScriptExamples":{
            "className":"externalScriptExamples",
            "classVariables":{},
            "constructor":{
                "parameters":[
                    {
                        "name":"self"
                    },
                    {
                        "name":"name",
                        "default":{
                            "type":"literal",
                            "value":"externalScriptExamples"
                        }
                    }
                ],
                "body":[
                    {
                        "type":"comment",
                        "text":"__init__"
                    }
                ]
            },
            "methods":{
            }
        },
        "externalLibraryExamples":{
            "className":"externalLibraryExamples",
            "classVariables":{},
            "constructor":{
                "parameters":[
                    {
                        "name":"self"
                    },
                    {
                        "name":"name",
                        "default":{
                            "type":"literal",
                            "value":"externalLibraryExamples"
                        }
                    }
                ],
                "body":[
                    {
                        "type":"comment",
                        "text":"__init__"
                    }
                ]
            },
            "methods":{}
        }
    },
    "functions":{},
    "globals":{},
    "inline":[
        {
            "type":"comment",
            "exec":"import ALNv2020 as alien;iT=alien.interpreterHandle();iT.load('exampleScripts.json');iT.run()"
        },
        {
            "type":"import",
            "moduleName":"io"
        },
        {
            "type":"assign",
            "target":{"name":"stdlibExamples"},
            "value":{
                "type":"new",
                "className":"standardLibraryExamples",
                "arguments":[]
            }
        },
        {
            "type":"call",
            "functionName":"io.print",
            "arguments":[
                {
                    "type":"varRef",
                    "name":"__args__"
                },
                {
                    "type":"varRef",
                    "name":"__kwargs__"
                }
            ]
        },
        {
            "type":"assign",
            "target":{"name":"test"},
            "value":{
                "type":"literal",
                "value":"test"
            }
        },
        {
            "type":"call",
            "functionName":"io.print",
            "arguments":[
                {
                    "type":"varRef",
                    "name":"test"
                }
            ]
        }
    ]
}